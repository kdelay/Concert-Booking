spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: "jdbc:mysql://localhost:3307/concert?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone&NON_KEYWORDS=USER"
    username: "root"
    password: "1234"
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: localhost
      port: 6379
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  async:
    execution:
      pool:
        core-size: 5
        max-size: 10
        queue-capacity: 25

payment:
  topic-name: "payment-success"

management:
  endpoints:
    web:
      exposure:
        include: 'prometheus'
  endpoint:
    prometheus:
      enabled: true
  metrics:
    enable:
      jvm:
        #JVM 메트릭 활성화
        thread:
          #스레드 메트릭 활성화
          enabled: true